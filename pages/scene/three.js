import Head from "next/head";
import { useState, useEffect, useRef } from "react";
import DialogueBox from "../../components/DialogueBox";
import SceneThreeLines from "../../script/SceneThree";
import styles from "../../styles/SceneThree.module.css";
import Image from 'next/image';
import Router from "next/router";

export async function getStaticProps() {
  const lines = SceneThreeLines();

  return {
    props: {
      lines,
    },
  };
}

export default function SceneOne({ lines }) {
  const [count, setCount] = useState(0);
  const [isOpen, setIsOpen] = useState(false);
  const [personOne, setPersonOne] = useState('/images/blank.png')
  const [personTwo, setPersonTwo] = useState('/images/blank.png')
  const [people, setPeople] = useState('/images/blank.png')
  const [disabled, setDisabled] = useState(false)

  useEffect(() => {
    const handleCount = () => {
      if (count == 0) {
        return "bg-kitchen";
      } else if (count == 1) {
        setPersonTwo('/images/rowan-stand-talk.png')
      } else if (count == 2) {
        setPersonTwo('/images/blank.png')
      } else if (count == 3) {
        setIsOpen(true)
        setDisabled(true)
        vidRef.current.play();
        setDisabled(true)
        setPersonTwo('/images/rowan-scared.png')
        return "bg-kitchen-fire"
      } else if (count == 4) {
        setPersonTwo('/images/rowan-scared.png')
        return "bg-kitchen-fire"
      } else if (count == 5) {
        setPersonTwo('/images/blank.png')
        return "bg-kitchen-fire"
      } else if (count == 6) {
        setPersonOne('/images/alaia-fire.png')
        return "bg-kitchen-fire"
      } else if (count == 7) {
        return "bg-kitchen-smoke"
      } else if (count == 8) {
        setPersonTwo('/images/rowan-determined-flipped.png')
        return "bg-kitchen-smoke"
      } else if (count == 9) {
        setPersonOne('/images/blank.png')
        setPersonTwo('/images/blank.png')
      } else if (count == 10) {
        setPersonOne('/images/alaia-listen.png')
        setPersonTwo('/images/rowan-stand-talk.png')
      } else if (count == 11) {
        setPersonOne('/images/alaia-talk.png')
        setPersonTwo('/images/rowan-stand-listen.png')
      } else if (count == 12) {
        setPersonOne('/images/alaia-listen.png')
        setPersonTwo('/images/rowan-stand-talk.png')
      } else if (count == 13) {
        setPersonTwo('/images/rowan-stand-listen.png')
      } else if (count == 14) {
        setPersonTwo('/images/rowan-scared.png')
      } else if (count == 15) {
        setPersonOne('/images/alaia-talk.png')
        setPersonTwo('/images/rowan-stand-listen.png')
      } else if (count == 16) {
        setPersonOne('/images/alaia-listen.png')
      } else if (count == 17) {
        setPersonOne('/images/alaia-talk.png')
      } else if (count == 18) {
        setPersonOne('/images/alaia-listen.png')
        setPersonTwo('/images/rowan-determined-flipped.png')
      } else if (count == 19) {
        setPersonOne('/images/alaia-laugh.png')
        setPersonTwo('/images/rowan-stand-talk.png')
      } else if (count == 20) {
        setPersonOne('/images/alaia-happy.png')
        setPersonTwo('/images/rowan-stand-listen.png')
      } else if (count == 21) {
        setPersonOne('/images/blank.png')
      } else if (count == 22) {
        setDisabled(true)
        setPersonOne('/images/blank.png')
        setPersonTwo('/images/blank.png')
        Router.push('/scene/four')
      }
      return "bg-kitchen";
    };

    setBgClass(handleCount());
  }, [count]);

  const [bgClass, setBgClass] = useState("bg-office");
  const vidRef = useRef(null);

  return (
    <div
      className={`${styles.container} ${styles[bgClass]} ${disabled ? styles["disable-click"] : ''}`}
      onClick={() => {
        setCount(count + 1);
      }}
    >
      <Head>
        <title>Scene Three</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <audio src="/music/sceneThree.mp3" autoPlay loop>
        <p>If you are reading this, it is because your browser does not support the audio element.</p>
        <embed src="/music/sceneThree.mp3" width="180" height="90" hidden={true} />
      </audio>
      <video ref={vidRef} muted className={`${styles.video} ${isOpen ? styles["fade-in"] : styles.disabled}`} onEnded={() => {setIsOpen(false); setDisabled(false); setBgClass("bg-kitchen-fire")}}>
        <source src="/videos/phonenotif.mp4" type="video/mp4"/>
      </video>
      <div className={`${styles["person-one"]} ${styles["fade-in"]}`}>
        <Image src={personOne} height="900" width="500" alt="Person One" objectFit="cover"></Image>
      </div>
      <div className={`${styles["people"]} ${styles["fade-in"]}`}>
        <Image src={people} height="900" width="500" alt="People" objectFit="cover"></Image>
      </div>
      <div className={`${styles["person-two"]} ${styles["fade-in"]}`}>
        <Image src={personTwo} height="1000" width="500" alt="Person Two" objectFit="cover"></Image>
      </div>
      <DialogueBox line={lines[count]}></DialogueBox>
    </div>
  );
}
